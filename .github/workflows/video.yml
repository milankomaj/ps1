name: Video
on:
  workflow_dispatch:
  schedule:
  - cron: "45 18 * * *"
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.SCALE }}
      output2: ${{ steps.step1.outputs.PREFIX }}
      output3: ${{ steps.step1.outputs.URL }}
      output4: ${{ steps.step1.outputs.SKzone }}
      output5: ${{ steps.step1.outputs.Tomorrow }}
      output6: ${{ steps.step1.outputs.TomorrowUrl }}
      output7: ${{ steps.step1.outputs.DateToday }}
      output8: ${{ steps.step1.outputs.first_day_moths }}
      output9: ${{ steps.step1.outputs.last_day_moths }}
      output10: ${{ steps.step1.outputs.month_date }}
      output11: ${{ steps.step1.outputs.pifd_url }}
      output12: ${{ steps.step1.outputs.success }}
    timeout-minutes: 20
    continue-on-error: true
    strategy:
      max-parallel: 3
      matrix:
       prefix: [pir3, pifd, pijp]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: himawari video prefix
        id: step1
        run: |
         date=$(date +'%Y%m%d');
         # date_plus_1=$(date  +'%Y%m%d' --date='tomorrow')
         SKzone=$(TZ='Europe/Bratislava' date)
         JPzone=$(TZ='Asia/Tokyo' date)
         echo date=$date
         # echo date_plus_1=$date_plus_1
         echo SK-zone=$SKzone
         echo JP-zone=$JPzone
         echo GH-zone=$(date)
         url=(https://himawari8.nict.go.jp/movie/720/$(echo $date)_${{ matrix.prefix }}.mp4)
         pifd_url=(https://himawari8.nict.go.jp/movie/720/$(echo $date)_pifd.mp4)
         # url_plus_1=(https://himawari8.nict.go.jp/movie/720/$(date_plus_1)_${{ matrix.prefix }}.mp4) # pir3.mp4, pifd.mp4, pijp.mp4
         echo pifd_url=$pifd_url
         # echo url=$url_plus_1
         echo url=$url
         size=$(curl -s $url | wc -c)
         echo size=$size
         scale=$(echo "scale=0; $size /1024/1024" | bc -l)
         echo scale=$scale
         first_day_moths=$(date +'%Y%m%d' -d "-0 month -$((10#$(date +%d)-1)) days")
         echo first_day_moths=$first_day_moths
         last_day_moths=$(date +'%Y%m%d' -d "-$(date +%d) days +1 month")
         echo last_day_moths=$last_day_moths
         month_date=$(date +'%Y%m');
         echo date=$month_date

         echo "::set-output name=SCALE::$(echo $scale)"
         echo "::set-output name=PREFIX::${{ matrix.prefix }}"
         echo "::set-output name=URL::$(echo $url)"
         echo "::set-output name=SKzone::$(echo $SKzone)"
         echo "::set-output name=Tomorrow::$(echo $date_plus_1)"
         echo "::set-output name=TomorrowUrl::$(echo $url_plus_1)"
         echo "::set-output name=DateToday::$(echo $date)"
         echo "::set-output name=first_day_moths::$(echo $first_day_moths)"
         echo "::set-output name=last_day_moths::$(echo $last_day_moths)"
         echo "::set-output name=month_date::$(echo $month_date)"
         echo "::set-output name=pifd_url::$(echo $pifd_url)"
      - name: Generate pir3
        shell: bash
        if: ${{ matrix.prefix == 'pir3' }}
        run: |
          echo pir3
          if [[ "${{ steps.step1.outputs.SCALE }}" -ge "1" ]]
          then
          echo "++++"
          sudo apt-get install -y ffmpeg
          url=$(curl -s -L -o ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 ${{ steps.step1.outputs.URL }})
          echo url = ${{ steps.step1.outputs.URL }}
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 -vf blackframe=0,metadata=select:key=lavfi.blackframe.pblack:value=90:function=less,minterpolate=mi_mode=mci:mc_mode=obmc:me_mode=bilat:vsbmc=0:me=tdls:fps=10 -c:a copy -y ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4
          ffmpeg -y -i ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4 -vf fps=10,scale=680:-1:flags=lanczos,palettegen palette.png
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4 -i palette.png -filter_complex "fps=10,scale=680:-1:flags=lanczos[x];[x][1:v]paletteuse" -y ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.gif
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4 -vcodec libwebp -preset default -loop 0 -an -vsync 0 -vf fps=10,scale=680:-1 -qscale:v 70 -y ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.webp
          else
          echo "-----"
          fi
      - name: Generate pifd
        shell: bash
        if: ${{ matrix.prefix == 'pifd' }}
        run: |
          echo pifd
          if [[ "${{ steps.step1.outputs.SCALE }}" -ge "1" ]]
          then
          echo "++++"
          echo "::set-output name=success::$(echo 1)"
          sudo apt-get install -y ffmpeg
          url=$(curl -s -L -o ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 ${{ steps.step1.outputs.URL }})
          echo url = ${{ steps.step1.outputs.URL }}
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 -vcodec libwebp -preset default -loop 0 -an -vsync 0 -vf "fps=30, scale=680:720" -qscale 70 -y ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.webp
          ffmpeg -y -i ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 -vf fps=10,scale=716:-1:flags=lanczos,palettegen ./Himawari/palette.png
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 -i ./Himawari/palette.png -filter_complex "fps=10,scale=716:-1:flags=lanczos[x];[x][1:v]paletteuse" -y ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.gif
          else
          echo "-----"
          fi
      - name: Generate pijp
        shell: bash
        if: ${{ matrix.prefix == 'pijp' }}
        run: |
          echo pijp
          if [[ "${{ steps.step1.outputs.SCALE }}" -ge "1" ]]
          then
          echo "++++"
          sudo apt-get install -y ffmpeg
          url=$(curl -s -L -o ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 ${{ steps.step1.outputs.URL }})
          echo url = ${{ steps.step1.outputs.URL }}
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}.mp4 -vf blackframe=0,metadata=select:key=lavfi.blackframe.pblack:value=90:function=less,minterpolate=mi_mode=mci:mc_mode=obmc:me_mode=bilat:vsbmc=0:me=tdls:fps=10 -c:a copy -y ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4
          ffmpeg -y -i ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4 -vf fps=10,scale=680:-1:flags=lanczos,palettegen palette.png
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4 -i palette.png -filter_complex "fps=10,scale=680:-1:flags=lanczos[x];[x][1:v]paletteuse" -y ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.gif
          ffmpeg -i ./Himawari/${{ steps.step1.outputs.PREFIX }}_out.mp4 -vcodec libwebp -preset default -loop 0 -an -vsync 0 -vf fps=10,scale=680:-1 -qscale:v 70 -y ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.webp
          else
          echo "-----"
          fi
      - name: tree
        run: |
         tree -h ./Himawari/
      - name: upload-artifacts
        uses: actions/upload-artifact@v2
        with:
         name: ${{ steps.step1.outputs.PREFIX }}
         path: |
          ./Himawari/himawari_${{ steps.step1.outputs.PREFIX }}.*

  m3u8:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: First day month
        shell: bash
        if: ${{ needs.build.outputs.output8 == needs.build.outputs.output7 }}
        run: |
         echo >> ./Himawari/m3u8/${{needs.build.outputs.output10}}_pifd.m3u8
         echo "#EXTM3U" >> ./Himawari/m3u8/${{needs.build.outputs.output10}}_pifd.m3u8
      - name: Generate m3u8 daily
        shell: bash
        if: ${{ needs.build.outputs.output12 == "1" }}
        run: |
         echo "#EXTINF:-1,${{needs.build.outputs.output7}}_pifd" >> ./Himawari/m3u8/${{needs.build.outputs.output10}}_pifd.m3u8
         echo "${{needs.build.outputs.output11}}" >> ./Himawari/m3u8/${{needs.build.outputs.output10}}_pifd.m3u8
      - name: upload-artifacts
        uses: actions/upload-artifact@v2
        if: ${{ needs.build.outputs.output12 == "1" }}
        with:
         name: pifd
         path: |
          ./Himawari/m3u8/${{needs.build.outputs.output10}}_pifd.m3u8

  push:
    runs-on: ubuntu-latest
    needs: [build,m3u8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
         path: ./Himawari/
      - name: Display structure of downloaded files
        run: |
         tree -h ./Himawari/
         echo ${{needs.build.outputs.output4}}
      - name: Update
        run: |
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global user.name ${{ secrets.NAME }}
          mv ${{ github.workspace }}/Himawari/pifd/*_pifd.m3u8 ${{ github.workspace }}/Himawari/m3u8
          git status
          git add ./Himawari/*/himawari_*.*
          git add ./Himawari/m3u8/*_pifd.m3u8
          git commit -m "${{needs.build.outputs.output4}}"
          git push
